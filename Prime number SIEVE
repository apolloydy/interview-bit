vector<int> Solution::sieve(int A) {
    vector<int> res;
    if (A<2) return res;
    res.push_back(2);
    long long n = A/2;
    if ((A&1) == 0) {
        n--;
    }
    vector<char> table (n+1);
    //long long bound = sqrt(A);
    for (long long i = 1; i<=n; i++) {
        if (table[i] == false) {
            res.push_back(i*2+1);
            long long gap = i*2+1;
            for (long long j = gap*gap/2; j <= n; j+=gap) {
                table[j] = true;
            }
        }
    }
    return res;
}
